---
- name: "Deploy"
  hosts: localhost
  #become: true
  become_user: vagrant
  vars:
    ansible_connection: local
  pre_tasks:
    - name: Install EPEL repo
      package: 
        name=epel-release state=present
      when: ansible_distribution == "CentOS"

    - name: install python-pip
      yum: name=python-pip state=present update_cache=yes

    - name: Install boto stuff 
      #become_user: vagrant
      pip: 
        name: "{{ item }}"
      with_items:
        - boto
        - boto3
        - botocore

  tasks:
    # tasks file for deploy-infra
    - name: Create a security group for server
      #become_user: vagrant
      ec2_group:
        name: "{{ security_group_name }}"
        description: "{{ security_group_name }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Deploy Production Server
      ec2:
        group: "{{ security_group_name }}"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image: "{{ aim_centos7 }}"
        wait: yes
        wait_timeout: 600
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 20
        count: 1
        vpc_subnet_id: "{{ subnet }}"
        assign_public_ip: yes
        region: "{{ region }}"
        id: "{{ id_token }}"
        #metadata_options:
        #  http_endpoint: enabled
        #  http_tokens: required
      register: ec2

    - name: Get public IP adress of production server
      set_fact: public_ip="{{ item.public_ip }}"
      with_items: "{{ ec2.instances }}"
      register: public_ip

    - name: Add the newly created host {{ public_ip }} to ec2 group
      add_host:
        name: "{{ item.public_ip }}"
        groups: "{{ host_group_name }}"
      with_items: "{{ ec2.instances }}"

    - name: Add tag to instance {{ public_ip }}
      ec2_tag:
        resource: "{{ item.id }}"
        region: "{{ region }}"
        state: "present"
        tags:
          Name: "ansible training ec2"
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up server {{ public_ip }}
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"


- name: "Apache installation using docker"
  hosts: "{{ host_group_name }}"
  become: true
  remote_user: centos
  vars_files:
    - group_vars/all.yml
  pre_tasks:
    - name: Install EPEL repo
      package: name=epel-release state=present
      when: ansible_distribution == "CentOS"
      
    - name: download pip script
      get_url:
        url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
        dest: /tmp/get-pip.py

    - name: install python-pip
      command: python2.7 /tmp/get-pip.py

    - name: Install docker python
      pip: name=docker-py

  roles:
    - geerlingguy.pip
    - geerlingguy.docker
  
  tasks:
    - name: Create Apache container
      docker_container:
        name: webapp
        image: httpd
        ports:
          - "80:80"
